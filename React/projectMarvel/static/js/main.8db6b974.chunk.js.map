{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","hooks/http.hooks.js","components/spinner/spinner.js","components/error/error.gif","components/error/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/skeleton/Skeleton.js","resources/img/vision.png","pages/MainPage.js","components/comicsList/ComicsList.js","pages/ComicsPage.js","pages/404.js","pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getComics","result","getComicId","id","getRandomCharacter","list","index","Math","floor","random","length","description","slice","getCharList","getCharId","cleanFilter","map","char","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformCharacter","_transformComic","title","price","prices","pageCount","language","textObjects","Spinner","ErrorMessage","src","img","alt","display","width","heigth","objectFit","margin","View","href","RandomChar","setName","setDescription","setThumbnail","setHomepage","setWiki","stateUpdate","then","res","results","filter","item","match","useEffect","onLoad","onError","content","onClick","mjolnir","CharItem","onSelect","selectedStyle","getKey","CharList","props","charList","setCharList","setLength","disabled","setDisabled","firstLoading","setFirstLoading","databaseLength","setDatabaseLength","n","temp","temp2","forEach","push","key","dataTransform","elements","selected","spinner","errorMessage","ViewCharInfo","CharInfo","setComics","selectedId","i","ErrorBoundary","state","errorInfo","this","setState","children","Component","Skeleton","MainPage","setId","decoration","ComicsList","lengthComics","setLengthComics","filterComics","update","ComicsPage","Page404","textAlign","comic","SingleComicPage","setComic","comicId","useParams","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8db6b974.chunk.js","sourcesContent":["import './appHeader.scss';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                    end \n                    style={({isActive}) => ({color: isActive ? '#9f0013' : 'inherit'})}\n                    to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink \n                    end \n                    style={({isActive}) => ({color: isActive ? '#9f0013' : 'inherit'})}\n                    to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useHttp} from '../hooks/http.hooks'\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {loading, request, error, clearError} = useHttp()\r\n\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\"\r\n    const _apiKey = \"c9b447237a938fb45510338c1513036b\"\r\n\r\n    const getRandomCharacter = (list) => {\r\n\r\n        let index = Math.floor(Math.random()*(list.length-0)+0)\r\n        if (!list[index].description) {\r\n            list[index].description = 'Description not found'\r\n        }\r\n        if (list[index].description.length > 100) {\r\n            list[index].description = list[index].description.slice(0,97) + \"...\"\r\n        }\r\n        return list[index]\r\n    }\r\n\r\n    const getComics = async () => {\r\n        const result = await request(`${_apiBase}comics?limit=100&apikey=${_apiKey}`)\r\n        return result\r\n    }\r\n\r\n    const getComicId = async (id) => {\r\n        const result = await request(`${_apiBase}comics/${id}?apikey=${_apiKey}`)\r\n        return result\r\n    }\r\n\r\n    const getCharList = async () => {\r\n        const result = await request(`${_apiBase}characters?limit=100&apikey=${_apiKey}`)\r\n        return result\r\n    }\r\n\r\n    const getCharId = async (id) => {\r\n        const result = await request(`${_apiBase}characters/${id}?apikey=${_apiKey}`)\r\n        return result\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        \r\n        return {\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n            loading:false,\r\n            error:false\r\n        }\r\n    }\r\n    const _transformComic = (char) => {\r\n        \r\n        return {\r\n            name: char.title,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n            price: char.prices[0].price,\r\n            pageCount:char.pageCount,\r\n            language:char.textObjects[0].language,\r\n            loading:false,\r\n            error:false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const cleanFilter = (data) => {\r\n        return data.map(char => {\r\n            return {\r\n                    name: char.name,\r\n                    description: char.description,\r\n                    thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n                    homepage: char.urls[0].url,\r\n                    wiki: char.urls[1].url,\r\n                    comics: char.comics.items,\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    return {loading, clearError, error, getRandomCharacter, getCharList, getCharId, cleanFilter, _transformCharacter, getComics, getComicId,_transformComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useCallback, useState } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers={'Content-Type': 'application/json'})=>{\r\n\r\n        setLoading(true)\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers})\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            setLoading(false)\r\n            return data\r\n\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setError(error.message)\r\n            throw error\r\n        }\r\n    },[])\r\n\r\n    const clearError = useCallback(()=>setError(null), [])\r\n\r\n    return {loading, error, request, clearError}\r\n\r\n}\r\n","import './spinner.css'\r\nconst Spinner = () => {\r\n\r\n        return(\r\n            <div className=\"loadingio-spinner-spinner-3p9k4696bkh\"><div className=\"ldio-b5z0xbujvnm\">\r\n<div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n</div></div>\r\n            )\r\n        }\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} alt=\"error\" style={{display: 'block', width: '250px', heigth: '250px', objectFit: 'contain', margin: '0 auto'}}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useEffect, useState } from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../error/errorMessage';\n\n\nconst RandomChar = () => {\n\n    const [name, setName] = useState(null)\n    const [description, setDescription] = useState(null)\n    const [thumbnail, setThumbnail] = useState(null)\n    const [homepage, setHomepage] = useState(null)\n    const [wiki, setWiki] = useState(null)\n\n    const {loading, error, getCharList, cleanFilter, getRandomCharacter, clearError} = useMarvelService();\n\n    const update = (data) => {\n        setName(data.name)\n        setDescription(data.description)\n        setThumbnail(data.thumbnail)\n        setHomepage(data.homepage)\n        setWiki(data.wiki)\n    }\n\n    const stateUpdate = () => {\n        clearError()\n        getCharList()\n        .then(res=>cleanFilter(res.data.results))\n        .then(res=>res.filter(item=>!item.thumbnail.match(/image_not_available/)))\n        .then(res=>getRandomCharacter(res))\n        .then(res=>update(res))\n    }\n\n    useEffect(()=>stateUpdate(), []) \n\n    const onLoad = loading ? <Spinner/> : null\n    const onError = error ? <ErrorMessage/> : null\n    const content = !(loading || error) ? <View data={[name, description, thumbnail, homepage, wiki]}/> : null\n    return (\n        <div className=\"randomchar\">\n            {content}\n            {onLoad}\n            {onError}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\"\n                        onClick={stateUpdate}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({data}) => {\n    const [name, description, thumbnail, homepage, wiki] = data\n    return (\n        <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">{description}</p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../error/errorMessage';\n\n\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([])\n    const [length, setLength] = useState(0)\n    const [disabled, setDisabled] = useState(\"\")\n    const [firstLoading, setFirstLoading] = useState(true)\n    const [databaseLength, setDatabaseLength] = useState(0)\n\n    const {loading, getCharList, error} = useMarvelService()\n\n    const update = (data) => {\n        setCharList(data)\n        setLength(length => length+9)\n        setDisabled(\"\")\n    }\n\n    const dataTransform = (data, n) => {\n        let temp = data.filter(item=>!item.thumbnail.path.match(/image_not_available/))\n        let temp2 = []\n        temp.forEach(item => {\n            temp2.push({\n                name:item.name,\n                thumbnail: item.thumbnail,\n                key: item.id\n            })\n        }) \n        setDatabaseLength(temp.length)\n        temp2.length = n\n        return temp2\n    }\n\n    const stateUpdate = () => {\n        setDisabled(\"disabled\")\n        getCharList()\n        .then(res => dataTransform(res.data.results, length+9))\n        .then(res=> update(res))\n        .then(res=> setFirstLoading(false))\n    }\n\n    useEffect(()=>stateUpdate(), [])\n\n    \n    const elements = charList.map(item => {\n        return <CharItem \n        name={item.name}\n        thumbnail={item.thumbnail.path + \".\" + item.thumbnail.extension}\n        key={item.key}\n        getKey={()=>item.key}\n        selectedStyle={props.data} \n        onSelect={()=>props.selected(item.key)}/>\n    })\n\n    const spinner = loading && firstLoading ? <Spinner/> : null\n    const errorMessage = error ? <ErrorMessage/> : null\n\n    return (\n        <div className=\"char__list\" >\n            <ul className=\"char__grid\" style={loading && firstLoading ? {display: 'block'} : null}>\n                {spinner}\n                {errorMessage}\n                {elements}\n            </ul>\n            <button className=\"button button__main button__long\"\n                    onClick={stateUpdate}\n                    disabled={databaseLength<=length ? \"disabled\" : disabled}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\n\nconst CharItem = ({name,thumbnail, onSelect, selectedStyle, getKey}) => {\n\n    return (\n        <li className={selectedStyle === getKey() ? \"char__item char__item_selected\" : \"char__item\"} \n        onClick={onSelect}>\n            <img src={thumbnail} alt=\"abyss\"/>\n            <div className=\"char__name\">{name}</div>\n        </li>\n    )\n}\n\nexport default CharList;","import './charInfo.scss';\nimport { useState, useEffect } from 'react';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../error/errorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\n\nconst CharInfo = (props) => {\n\n    const [name, setName] = useState(null)\n    const [description, setDescription] = useState(null)\n    const [thumbnail, setThumbnail] = useState(null)\n    const [homepage, setHomepage] = useState(null)\n    const [wiki, setWiki] = useState(null)\n    const [comics, setComics] = useState([])\n\n\n    const {loading, error, getCharId, _transformCharacter, clearError} = useMarvelService()\n\n    const update = (data) => {\n        setName(data.name)\n        setDescription(data.description)\n        setThumbnail(data.thumbnail)\n        setHomepage(data.homepage)\n        setWiki(data.wiki)\n        setComics(data.comics)\n    }\n\n    const stateUpdate = () => {\n        clearError()\n        getCharId(props.selectedId)\n        .then(res=>_transformCharacter(res.data.results[0]))\n        .then(res=>update(res))\n    }\n\n    useEffect(()=>stateUpdate(), [])\n    useEffect(()=>stateUpdate(), [props.selectedId])\n\n    const elements = comics.map((item,i)=> {\n        return (\n            <li className=\"char__comics-item\"\n                key={i}>\n                {item.name}\n            </li>\n        )\n    })\n    \n    const onLoad = loading ? <Spinner/> : null\n    const onError = error ? <ErrorMessage/> : null\n    const content = !(loading || error) ? <ViewCharInfo data={[homepage, name, thumbnail, wiki, elements, description]}/> : null\n\n    return (\n        <div className=\"char__info\">\n            {onLoad}\n            {onError}\n            {content}\n\n        </div>\n    )\n}\n\n\nconst ViewCharInfo = ({data}) => {\n    const [homepage, name, thumbnail, wiki, elements, description] = data\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {name ? elements : null}\n            </ul>\n        </>\n\n    )\n}\n\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from '../error/errorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({error:true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <div className=\"char__info\">\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Skeleton;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import RandomChar from \"../components/randomChar/RandomChar\";\r\nimport CharList from \"../components/charList/CharList\"\r\nimport CharInfo from \"../components/charInfo/CharInfo\";\r\nimport { useState } from \"react\";\r\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\"\r\n\r\nimport decoration from '../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [id, setId] = useState(null)\r\n\r\n    const selected = (id) => {\r\n        setId(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList selected={selected} data={id}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    {id ? <CharInfo selectedId={id}/> : <Skeleton/>}\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport { useEffect, useState } from 'react';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../error/errorMessage';\nimport { Link } from 'react-router-dom';\n\nconst ComicsList = () => {\n\n    const [comics, setComics] = useState([])\n    const [databaseLength, setDatabaseLength] = useState(0)\n    const [lengthComics, setLengthComics] = useState(0)\n    const [disabled, setDisabled] = useState(\"\")\n    const [firstLoading, setFirstLoading] = useState(true)\n\n    const {getComics, loading, error} = useMarvelService()\n    \n\n\n    const filterComics = (data, n) => {\n        const temp =  data.map(char => {\n            return {\n                id: char.id,\n                name: char.title,\n                price: char.prices[0].price,\n                thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n                url: char.urls[0].url\n            }\n        })\n        const temp2 = temp.filter(item=>!item.thumbnail.match(/image_not_available/))\n        setDatabaseLength(temp2.length)\n        temp2.length = n+8\n        \n        return temp2\n    }\n\n    const update = (res) => {\n        setLengthComics(res.length)\n        setComics(res)\n        setDisabled(\"\")\n    }\n\n    const stateUpdate = () => {\n        setDisabled(\"disabled\")\n        getComics()\n        .then(res=>filterComics(res.data.results, lengthComics))\n        .then(res=>update(res))\n        .then(res=>setFirstLoading(false))\n    }\n\n    useEffect(()=>{\n        stateUpdate()\n    }, [])\n\n    const onLoad = loading && firstLoading ? <Spinner/> : null\n    const onError = error ? <ErrorMessage/> : null\n    const elements = comics.map(item => {\n        return (\n            <li className=\"comics__item\" key={item.id}>\n                <Link to={`/comics/${item.id}`}>\n                    <img src={item.thumbnail} alt={item.name} className=\"comics__item-img\"/>\n                    <div className=\"comics__item-name\">{item.name}</div>\n                    <div className=\"comics__item-price\">{item.price}</div>\n                </Link>\n            </li>\n        )\n    })\n\n    \n\n    return (\n        <div className=\"comics__list\">\n            <ul className=\"comics__grid\" style={loading && firstLoading ? {display: 'block'} : null}>\n                    {onLoad}\n                    {onError}\n                    {elements}\n            </ul>\n            <button className=\"button button__main button__long\" \n                    onClick={stateUpdate} \n                    disabled={databaseLength<=lengthComics ? \"disabled\" : disabled}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import ComicsList from \"../components/comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n\r\n    return (\r\n        <ComicsList/>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import ErrorMessage from \"../components/error/errorMessage\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Page404 = () => {\r\n\r\n    return (\r\n        <div>\r\n            <ErrorMessage/>\r\n            <p style={{textAlign:'center'}}>Page does not exist</p>\r\n            <Link to=\"/\" style={{textAlign:'center', display:'block'}}>Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import './singleComicPage.scss';\nimport useMarvelService from '../services/MarvelService';\nimport { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Spinner from '../components/spinner/spinner';\nimport ErrorMessage from '../components/error/errorMessage';\n\n\nconst SingleComicPage = () => {\n\n    const [comic, setComic] = useState(null)\n\n    const {getComicId, _transformComic, loading, error, clearError} = useMarvelService()\n    const {comicId} = useParams()\n\n    const stateUpdate = () => {\n        clearError()\n        getComicId(comicId)\n        .then(res=>_transformComic(res.data.results[0]))\n        .then(res=>setComic(res))\n    }\n\n    useEffect(()=>{stateUpdate()},[comicId])\n\n    const spinner = loading ? <Spinner/> : null\n    const errorMessage = error ? <ErrorMessage/> : null\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null\n\n    return (\n        <>\n            {spinner}\n            {errorMessage}\n            {content}\n        </>\n    )\n}\n\nconst View = ({comic}) => {\n\n    const {name, thumbnail, pageCount, language, price, description} = comic\n\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={name} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{name}</h2>\n                <p className=\"single-comic__descr\">{description ? description : \"Description not found\"}</p>\n                <p className=\"single-comic__descr\">{pageCount+' pages'}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price ? price+\"$\" : \"Not available\"}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComicPage;","import AppHeader from \"../appHeader/AppHeader\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport {MainPage, ComicsPage, Page404, SingleComicPage} from '../../pages'\n\n\n\nconst App = () => {\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path=\"/\" element={<MainPage/>}/>\n                        <Route path=\"/comics\" element={<ComicsPage/>}/>\n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage/>}/>\n                        <Route path=\"*\" element={<Page404/>}/>\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}